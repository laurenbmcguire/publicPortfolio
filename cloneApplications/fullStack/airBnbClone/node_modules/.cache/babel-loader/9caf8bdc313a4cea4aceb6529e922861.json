{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport * as React from 'react';\nimport defaultLocaleData from './default';\nimport LocaleContext from './context';\n\nvar LocaleReceiver = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocaleReceiver, _React$Component);\n\n  var _super = _createSuper(LocaleReceiver);\n\n  function LocaleReceiver() {\n    _classCallCheck(this, LocaleReceiver);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LocaleReceiver, [{\n    key: \"getLocale\",\n    value: function getLocale() {\n      var _this$props = this.props,\n          componentName = _this$props.componentName,\n          defaultLocale = _this$props.defaultLocale;\n      var locale = defaultLocale || defaultLocaleData[componentName || 'global'];\n      var antLocale = this.context;\n      var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};\n      return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n    }\n  }, {\n    key: \"getLocaleCode\",\n    value: function getLocaleCode() {\n      var antLocale = this.context;\n      var localeCode = antLocale && antLocale.locale; // Had use LocaleProvide but didn't set locale\n\n      if (antLocale && antLocale.exist && !localeCode) {\n        return defaultLocaleData.locale;\n      }\n\n      return localeCode;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children(this.getLocale(), this.getLocaleCode(), this.context);\n    }\n  }]);\n\n  return LocaleReceiver;\n}(React.Component);\n\nexport { LocaleReceiver as default };\nLocaleReceiver.defaultProps = {\n  componentName: 'global'\n};\nLocaleReceiver.contextType = LocaleContext;\nexport function useLocaleReceiver(componentName, defaultLocale) {\n  var antLocale = React.useContext(LocaleContext);\n  var componentLocale = React.useMemo(function () {\n    var locale = defaultLocale || defaultLocaleData[componentName || 'global'];\n    var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};\n    return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  return [componentLocale];\n}","map":{"version":3,"names":["_extends","_classCallCheck","_createClass","_inherits","_createSuper","React","defaultLocaleData","LocaleContext","LocaleReceiver","_React$Component","_super","apply","arguments","key","value","getLocale","_this$props","props","componentName","defaultLocale","locale","antLocale","context","localeFromContext","getLocaleCode","localeCode","exist","render","children","Component","default","defaultProps","contextType","useLocaleReceiver","useContext","componentLocale","useMemo"],"sources":["/Users/laurenmcguire/Desktop/portfolio_projects/cloneApplications/fullStack/airBnbClone/node_modules/antd/es/locale-provider/LocaleReceiver.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport * as React from 'react';\nimport defaultLocaleData from './default';\nimport LocaleContext from './context';\n\nvar LocaleReceiver = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocaleReceiver, _React$Component);\n\n  var _super = _createSuper(LocaleReceiver);\n\n  function LocaleReceiver() {\n    _classCallCheck(this, LocaleReceiver);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LocaleReceiver, [{\n    key: \"getLocale\",\n    value: function getLocale() {\n      var _this$props = this.props,\n          componentName = _this$props.componentName,\n          defaultLocale = _this$props.defaultLocale;\n      var locale = defaultLocale || defaultLocaleData[componentName || 'global'];\n      var antLocale = this.context;\n      var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};\n      return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n    }\n  }, {\n    key: \"getLocaleCode\",\n    value: function getLocaleCode() {\n      var antLocale = this.context;\n      var localeCode = antLocale && antLocale.locale; // Had use LocaleProvide but didn't set locale\n\n      if (antLocale && antLocale.exist && !localeCode) {\n        return defaultLocaleData.locale;\n      }\n\n      return localeCode;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children(this.getLocale(), this.getLocaleCode(), this.context);\n    }\n  }]);\n\n  return LocaleReceiver;\n}(React.Component);\n\nexport { LocaleReceiver as default };\nLocaleReceiver.defaultProps = {\n  componentName: 'global'\n};\nLocaleReceiver.contextType = LocaleContext;\nexport function useLocaleReceiver(componentName, defaultLocale) {\n  var antLocale = React.useContext(LocaleContext);\n  var componentLocale = React.useMemo(function () {\n    var locale = defaultLocale || defaultLocaleData[componentName || 'global'];\n    var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};\n    return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  return [componentLocale];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}