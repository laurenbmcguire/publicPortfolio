{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport { Circle as RCCircle } from 'rc-progress';\nimport { presetPrimaryColors } from '@ant-design/colors';\nimport classNames from 'classnames';\nimport { validProgress, getSuccessPercent } from './utils';\n\nfunction getPercentage(_ref) {\n  var percent = _ref.percent,\n      success = _ref.success,\n      successPercent = _ref.successPercent;\n  var ptg = validProgress(percent);\n  var realSuccessPercent = getSuccessPercent({\n    success: success,\n    successPercent: successPercent\n  });\n\n  if (!realSuccessPercent) {\n    return ptg;\n  }\n\n  return [validProgress(realSuccessPercent), validProgress(ptg - validProgress(realSuccessPercent))];\n}\n\nfunction getStrokeColor(_ref2) {\n  var success = _ref2.success,\n      strokeColor = _ref2.strokeColor,\n      successPercent = _ref2.successPercent;\n  var color = strokeColor || null;\n  var realSuccessPercent = getSuccessPercent({\n    success: success,\n    successPercent: successPercent\n  });\n\n  if (!realSuccessPercent) {\n    return color;\n  }\n\n  return [presetPrimaryColors.green, color];\n}\n\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n      width = props.width,\n      strokeWidth = props.strokeWidth,\n      trailColor = props.trailColor,\n      strokeLinecap = props.strokeLinecap,\n      gapPosition = props.gapPosition,\n      gapDegree = props.gapDegree,\n      type = props.type,\n      children = props.children;\n  var circleSize = width || 120;\n  var circleStyle = {\n    width: circleSize,\n    height: circleSize,\n    fontSize: circleSize * 0.15 + 6\n  };\n  var circleWidth = strokeWidth || 6;\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || 'top';\n\n  var getGapDegree = function getGapDegree() {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n\n    if (type === 'dashboard') {\n      return 75;\n    }\n\n    return undefined;\n  }; // using className to style stroke color\n\n\n  var strokeColor = getStrokeColor(props);\n  var isGradient = Object.prototype.toString.call(strokeColor) === '[object Object]';\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: circleWidth,\n    trailWidth: circleWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: getGapDegree(),\n    gapPosition: gapPos\n  }), children);\n};\n\nexport default Circle;","map":{"version":3,"names":["_defineProperty","React","Circle","RCCircle","presetPrimaryColors","classNames","validProgress","getSuccessPercent","getPercentage","_ref","percent","success","successPercent","ptg","realSuccessPercent","getStrokeColor","_ref2","strokeColor","color","green","props","prefixCls","width","strokeWidth","trailColor","strokeLinecap","gapPosition","gapDegree","type","children","circleSize","circleStyle","height","fontSize","circleWidth","gapPos","getGapDegree","undefined","isGradient","Object","prototype","toString","call","wrapperClassName","concat","createElement","className","style","trailWidth"],"sources":["/Users/laurenmcguire/Desktop/portfolio_projects/cloneApplications/fullStack/airBnbClone/node_modules/antd/es/progress/Circle.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport { Circle as RCCircle } from 'rc-progress';\nimport { presetPrimaryColors } from '@ant-design/colors';\nimport classNames from 'classnames';\nimport { validProgress, getSuccessPercent } from './utils';\n\nfunction getPercentage(_ref) {\n  var percent = _ref.percent,\n      success = _ref.success,\n      successPercent = _ref.successPercent;\n  var ptg = validProgress(percent);\n  var realSuccessPercent = getSuccessPercent({\n    success: success,\n    successPercent: successPercent\n  });\n\n  if (!realSuccessPercent) {\n    return ptg;\n  }\n\n  return [validProgress(realSuccessPercent), validProgress(ptg - validProgress(realSuccessPercent))];\n}\n\nfunction getStrokeColor(_ref2) {\n  var success = _ref2.success,\n      strokeColor = _ref2.strokeColor,\n      successPercent = _ref2.successPercent;\n  var color = strokeColor || null;\n  var realSuccessPercent = getSuccessPercent({\n    success: success,\n    successPercent: successPercent\n  });\n\n  if (!realSuccessPercent) {\n    return color;\n  }\n\n  return [presetPrimaryColors.green, color];\n}\n\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n      width = props.width,\n      strokeWidth = props.strokeWidth,\n      trailColor = props.trailColor,\n      strokeLinecap = props.strokeLinecap,\n      gapPosition = props.gapPosition,\n      gapDegree = props.gapDegree,\n      type = props.type,\n      children = props.children;\n  var circleSize = width || 120;\n  var circleStyle = {\n    width: circleSize,\n    height: circleSize,\n    fontSize: circleSize * 0.15 + 6\n  };\n  var circleWidth = strokeWidth || 6;\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || 'top';\n\n  var getGapDegree = function getGapDegree() {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n\n    if (type === 'dashboard') {\n      return 75;\n    }\n\n    return undefined;\n  }; // using className to style stroke color\n\n\n  var strokeColor = getStrokeColor(props);\n  var isGradient = Object.prototype.toString.call(strokeColor) === '[object Object]';\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: circleWidth,\n    trailWidth: circleWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: getGapDegree(),\n    gapPosition: gapPos\n  }), children);\n};\n\nexport default Circle;"],"mappings":"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"},"metadata":{},"sourceType":"module"}